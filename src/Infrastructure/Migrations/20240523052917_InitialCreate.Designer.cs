// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240523052917_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.AnalyticsSettingsAggregate.AnalyticsSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnalyticsType")
                        .HasColumnType("integer");

                    b.Property<int>("ProcessorType")
                        .HasColumnType("integer");

                    b.Property<long>("SkipFrames")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("VideoStreamId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VideoStreamId");

                    b.ToTable("AnalyticsSettings");
                });

            modelBuilder.Entity("ApplicationCore.Entities.VideoStreamAggregate.VideoStream", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stream");
                });

            modelBuilder.Entity("ApplicationCore.Entities.AnalyticsSettingsAggregate.AnalyticsSettings", b =>
                {
                    b.HasOne("ApplicationCore.Entities.VideoStreamAggregate.VideoStream", null)
                        .WithMany("AnalyticsSettings")
                        .HasForeignKey("VideoStreamId");
                });

            modelBuilder.Entity("ApplicationCore.Entities.VideoStreamAggregate.VideoStream", b =>
                {
                    b.Navigation("AnalyticsSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
